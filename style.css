*,
::after,
::before {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    list-style: inside;
    box-sizing: border-box;
}
img,
video {
    width: 100%;
    vertical-align: middle;
}

/* https://codepen.io/jh3y/pen/OJRLMxE */
:root {
    /* --primary-color: red; */
    --transition-duration: 15s;
    --transition-timing-function: linear;

    --hue: 0;
    --saturation: 80%;
    --luminosity: 50%;
    --color: hsl(var(--hue), var(--saturation), var(--luminosity));

    --spacing: 20px;
    --negative-spacing: -20px;
    --half-spacing: 10px;

    --filter: brightness(0.1) saturate(1.5);
    --hover-filter: brightness(0.6);

    --scroll-behavior: smooth;
    scroll-behavior: var(--scroll-behavior);
}
body {
    color: var(--color);
    transition: color var(--transition-duration)
            var(--transition-timing-function),
        background-color var(--transition-duration)
            var(--transition-timing-function);
    background-color: var(--color);

    backdrop-filter: var(--filter);
    -webkit-backdrop-filter: var(--filter);
    min-height: 100vh;

    font-family: 'Roboto Flex', sans-serif;

    padding: var(--spacing);

    font-size: 18px;
}

header,
main,
.scratch,
.screenshots,
.figma {
    border: 1px solid var(--color);
    transition: border-color var(--transition-duration)
        var(--transition-timing-function);
    border-top: none;
    padding: var(--spacing);
}
.gallery iframe,
.gallery img,
.figma iframe {
    border: 1px solid var(--color);
    transition: border-color var(--transition-duration)
        var(--transition-timing-function);
}
header {
    border-top: 1px solid var(--color);
}
header h3 {
    letter-spacing: 0.01em;
}
.scratch__game-container {
    border: 1px solid var(--color);
    transition: border-color var(--transition-duration)
        var(--transition-timing-function);
    overflow: hidden;
    display: grid;
    align-items: stretch;
    justify-items: stretch;
}
.scratch__game-container > * {
    grid-area: 1 / 1 / 2 / 2;
}
.scratch__mobile-warning {
    transform-origin: top left;
    z-index: 1;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background-color: hsla(
        var(--hue),
        var(--saturation),
        var(--luminosity),
        0.6
    );
    display: none;
    align-items: center;
    justify-items: center;
    transition: background-color var(--transition-duration)
            var(--transition-timing-function),
        color var(--transition-duration) var(--transition-timing-function);
}
.scratch__mobile-warning > p {
    text-align: center;
    display: grid;
    width: 250px;
    gap: var(--half-spacing);
    font-weight: 500;
    filter: var(--filter);
    font-size: 1.3em;
}
.scratch__mobile-warning > p > span {
    font-size: 2em;
}

header p {
    margin-top: var(--half-spacing);
}
header h1,
header p {
    max-width: 1000px;
}
.header__top {
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: start;
    gap: var(--half-spacing);
}
.header__top > a {
    color: var(--color);
    transition: color var(--transition-duration)
        var(--transition-timing-function);
    font-weight: 500;
    font-size: 21px;
}
.header__top > a > span {
    text-decoration: underline;
    font-size: 0.95em;
    position: relative;
    top: 0.5px;
}
.header__top > a,
.header__top > a > span {
    text-decoration-thickness: 2px;
}

h1 {
    font-weight: 500;
    font-size: 36px;
    margin-top: var(--spacing);
}

h1,
h2,
h3,
h4 {
    font-family: 'Unbounded', cursive;
}

header h2 {
    font-size: 32px;
    line-height: 80%;
}
h2 > strong {
    font-weight: 900;
}

h3,
h2,
h4 {
    font-size: 21px;
    line-height: auto;
    font-weight: 200;
}
h2:not(header h2) {
    margin-bottom: var(--half-spacing);
    font-weight: 500;
}
.gallery h2 {
    margin-bottom: 0;
}
h4 > strong {
    font-weight: 500;
}

p,
ul {
    letter-spacing: 0.01em;
}

sub,
sup {
    /* Specified in % so that the sup/sup is the
       right size relative to the surrounding text */
    font-size: 70%;

    /* Zero out the line-height so that it doesn't
       interfere with the positioning that follows */
    line-height: 0;

    /* Where the magic happens: makes all browsers position
       the sup/sup properly, relative to the surrounding text */
    position: relative;

    /* Note that if you're using Eric Meyer's reset.css, this
       is already set and you can remove this rule */
    vertical-align: baseline;
}

sup {
    /* Move the superscripted text up */
    top: -0.5em;
}

sub {
    /* Move the subscripted text down, but only
       half as far down as the superscript moved up */
    bottom: -0.25em;
}

iframe {
    transform-origin: top left;
}

.gallery {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: var(--spacing);
}
.gallery iframe {
    aspect-ratio: 4 / 3;
}

.link-to-game {
    background-color: var(--color);
    transition: background-color var(--transition-duration)
            var(--transition-timing-function),
        color var(--transition-duration) var(--transition-timing-function);
    display: block;
    text-decoration: none;
    margin-top: var(--half-spacing);
    font-weight: 500;
    font-family: 'Unbounded', cursive;
    display: grid;
}

.link-to-game > span {
    color: var(--color);
    text-align: center;
    transition: opacity 3s cubic-bezier(0.075, 0.82, 0.165, 1),
        color var(--transition-duration) var(--transition-timing-function);
    padding: var(--spacing);

    grid-area: 1 / 1 / 2 / 2;
}

.link-to-game > span:nth-child(1) {
    filter: var(--filter);
}
.link-to-game > span:nth-child(2) {
    opacity: 0;
    z-index: 1;
}
.link-to-game:hover > span:nth-child(2) {
    opacity: 1;
}

.link-to-game::after {
    content: '';
    border: 1px solid var(--color);
    transition: border-color var(--transition-duration)
        var(--transition-timing-function);
    grid-area: 1 / 1 / 2 / 2;
    z-index: 1;
}
.link-to-game::before {
    content: '';
    grid-area: 1 / 1 / 2 / 2;
    opacity: 0;
    transition: opacity 3s cubic-bezier(0.075, 0.82, 0.165, 1),
        background-color var(--transition-duration)
            var(--transition-timing-function);

    background-color: var(--color);
    filter: var(--filter);
}

.scratch {
    display: grid;
    grid-template-columns: 680px 1fr;
    gap: var(--spacing);
}
.link-to-game:hover::before {
    opacity: 1;
}

.screenshots h2 {
    grid-area: 1 / 1 / 2 / -1;
}

.conception a {
    color: var(--color);
    transition: color var(--transition-duration)
        var(--transition-timing-function);
}

h2:nth-of-type(2) {
    margin-top: var(--spacing);
}

@media (max-width: 1000px) {
    .gallery {
        grid-template-columns: repeat(3, 1fr);
    }
    .scratch {
        grid-template-columns: 500px 1fr;
    }
}
@media (max-width: 850px) {
    .gallery {
        grid-template-columns: repeat(2, 1fr);
    }
    .scratch {
        grid-template-columns: 400px 1fr;
    }
    .header__top > a {
        transform-origin: top right;
        transform: scale(0.7);
    }
}
/* @media (max-width: 671px) {
    .header__top {
        grid-template-columns: 1fr;
    }
    .header__top > a {
        transform: none;
    }
} */
@media (max-width: 675px) {
    header h2 {
        font-size: 7.9vw;
    }
    header h3 {
        font-size: 5.2vw;
    }
    .gallery {
        grid-template-columns: 1fr;
    }
    .scratch {
        grid-template-columns: 1fr;
    }
    .scratch__game-container {
        max-width: 100%;
    }
    .header__top {
        grid-template-columns: 1fr;
    }
    .header__top > a {
        /* transform: none; */
        order: -1;
        transform-origin: top left;
    }
}
